---

################################################################################
#                                                                              #
# AccuInsight+ Kubernetes Platform                                             #
#                                                                              #
################################################################################

os_update: false
os_timezone: Asia/Seoul # default is UTC

################################################################################
# AccuInsight+ Kubernetes Environment ################################ BEGIN ###
################################################################################

ext_lb_fqdn: "{{ accu_load_balancer_fqdn }}"
ext_lb_addr: "{{ accu_load_balancer_addr }}"
ext_lb_port: 8443

# 1.17.x / 1.18.x / 1.19.x / 1.20.x / 1.21.x / 1.22.x (experimental)
kube_version: 1.21.4

# NOTE: kube_pod_cidr and kube_svc_cidr MUST NOT be overlaped with customer's existing network subnet.
# DOCS: https://en.wikipedia.org/wiki/Private_network
# TOOL: http://www.subnet-calculator.com
kube_pod_cidr: 10.0.0.0/16
kube_svc_cidr: 10.1.0.0/16

# Currently. only support for iptables
kube_proxy_mode: iptables

# Master node accept normal workload if this value is false.
kube_master_node_taint: true

# Kubernetes Data Directory
kube_data_dir_cri:     /data/cri         # default: /var/lib/docker
kube_data_dir_kubelet: /data/k8s/kubelet # default: /var/lib/kubelet
kube_data_dir_etcd:    /data/k8s/etcd    # default: /var/lib/etcd

# Kubernetes admin users
# These users can use kubectl, crictl and cri commands such as docker, ctr, podman.
# If the user listed up here are invalid, it will be ignored.
kube_admin_users:
  - "{{ ansible_user }}"
  - "root"
  - "ec2-user" # for redhat on AWS
  - "ubuntu"   # for ubuntu on AWS
  - "centos"   # for centos on AWS

###############################
# AccuInsight+ Kubernetes CNI #
###############################

# Currently, only support for calico
kube_cni: calico

cni_calico_version: 3.17.1

# Configure the MTU to use for workload interfaces and tunnels.
# By default, MTU is auto-detected, and explicitly setting this field should not be required.
# You can override auto-detection by providing a non-zero value.
# Refer to the following link for recommended mtu based on platform.
# https://docs.projectcalico.org/networking/mtu
cni_calico_mtu: 0

# Choose Calico iptables backend: "Legacy", "Auto" or "NFT"
# If iptables >= 1.8, Auto or NFT should be set.
cni_calico_iptablesbackend: Auto

# The method to use to autodetect the IPv4 address for nodes.
#
# This is for complex network environment. check with 'ifconfig' command.
# for example, nodes have multiple physical interfaces, or possibly multiple IP addresses configured on a physical interface, or use different cidr.
# for more details, refer to https://docs.projectcalico.org/reference/node/configuration
#
# If nodes have single network interface, 'cni_calico_autodetection_method_flags_enabled' might be 'false' but setting explicit flags is recommended.
#
# Examples:
# cni_calico_autodetection_method: "interface=eth0"
# cni_calico_autodetection_method: "cidr=10.0.1.0/24,10.0.2.0/24"
# cni_calico_autodetection_method: "can-reach={{ hostvars[groups['kube-master'][0]]['private_ip'] }}"
#
cni_calico_autodetection_method_flags_enabled: true
cni_calico_autodetection_method_flags: "interface=eth0"

# The method to use to autodetect the IPv4 address for nodes.
# NOTE: THIS PARAMETER IS JUST FOR TEST. LEAVE THIS AS 'default'.
#
# default:
#   default method provided by calico.
#
# complex: 
#   this is for complex network environment.
#   for example, nodes have many network interfaces and use different cidr.
#   this is based on 'private_ip' from inventory file and set a seperate cidr for each nodes.
cni_calico_cidr_autodetection_method: default


###############################
# AccuInsight+ Kubernetes CRI #
###############################

# containerd | cri-o | docker
kube_cri: docker

# NOTE: Specify cri version to be installed.
# This will be calculated automatically according to cri compatible matrix if leave it blank.
# See inventory/accuinsight/group_vars/all/compatible-matrix.yaml for more details
kube_cri_version:

cri_cgroup_driver: systemd # systemd or cgroupfs
cri_insecure_registries: # 0.0.0.0/0 can be used
  - "0.0.0.0/0"
#  - "{{ accu_registry_fqdn }}"


# Define default domain name which is used for base service.
kube_default_domain: accuinsight.io

# Choose default registry between accu-registry and accu-harbor
#kube_default_registry: accu-registry

# Choose default storageclass among accu-nfs-provisioner, accu-ceph-block and accu-ceph-cephfs
#kube_default_storage: accu-nfs-provisioner

################################################################################
######################################################################## END ###
################################################################################

# AccuInsight+ Offline Materials
accu_offline_enabled: true
accu_offline_source: "{{ inventory_dir }}/../../data/offline"
accu_offline_target: /data/accuinsight/offline

# AccuInsight+ Offline Registry Mirror
# If accu_offline_image_mirror set to true, some registries (docker.io / gcr.io / quay.io) will be transparently emulated to internal registry.
# accu-registry will be used. (accu-harbor has some problems with unqualified image)
accu_offline_image_mirror: true

# AccuInsight+ Service Materials
accu_service_source: "{{ inventory_dir }}/../../data/service"
accu_service_target: /data/accuinsight/service

# AccuInsight+ Collector
accu_collector_target: /data/accuinsight/collector
accu_collector_gathering_deployer: false
accu_collector_gathering_packages: false
accu_collector_gathering_charts: true
accu_collector_gathering_files: false
accu_collector_gathering_images: true
accu_collector_cleanup: false

# AccuInsight+ Menifess Location
accu_manifests_location: /etc/kubernetes/accuinsight

# AccuInsight+ Certificates Location
accu_certificates_location: /etc/kubernetes/accuinsight/accu-certificates
accu_certificates_bits: 2048
accu_certificates_expiration: 3650 # specify in days
accu_certificates_recreation: false

# AccuInsight+ Namespace
accu_system_namespace: accu-system
accu_service_namespace: accu


# AccuInsight+ Package Repository
accu_package_repository_enabled: true
accu_package_repository_path: /repo
accu_package_repository_port: 1234
# How to handle online repository on redhat family.
# all_disable / all_skip / selective_disable / selective_skip
accu_package_repository_online_handling: all_disable


# AccuInsight+ K8S Tools
accu_tools_enabled: true
accu_tools_powerline_version: 1.21.0 # https://github.com/justjanne/powerline-go
accu_tools_kubectx_version: 0.9.4    # https://github.com/ahmetb/kubectx
accu_tools_kubens_version: 0.9.4     # https://github.com/ahmetb/kubectx
accu_tools_k9scli_version: 0.24.15   # https://k9scli.io/
accu_tools_kubestr_version: 0.4.17   # https://kubestr.io/


# AccuInsight+ Helm
accu_helm_enabled: true
accu_helm_version: 3.7.1
accu_helm_max_history: 10
accu_helm_stable_repo: "https://charts.helm.sh/stable"


# AccuInsight+ Load Balancer
accu_vip_manager_enabled: false
accu_vip_manager_version: 2.0.20
accu_vip_manager_nic: eth0
accu_load_balancer_enabled: true
accu_load_balancer_version: 2.2.5
accu_load_balancer_namespace: "{{ accu_system_namespace }}"
accu_load_balancer_stats: true
accu_load_balancer_stats_port: 8888
accu_load_balancer_stats_user: admin
accu_load_balancer_stats_pass: AccuInsight+k8s
accu_load_balancer_vip: xxx.xxx.xxx.xxx
accu_load_balancer_fqdn: k8s.accuinsight.io
accu_load_balancer_addr: "{% if accu_vip_manager_enabled | bool %}{{ accu_load_balancer_vip }}{% else %}{{ hostvars[groups['kube-master'][0]]['private_ip'] }}{% endif %}"
accu_load_balancer_config_location: "/etc/accuinsight"
# NOTE: see roles/accu-load-balancer/vars/*.yaml for more details about 'accu_load_balancer_nic'
#       Now, default NIC is detected automatically. this parameter is deprecated
# accu_load_balancer_nic:


# AccuInsight+ Metrics Server
accu_metrics_server_enabled: true
accu_metrics_server_release: accu-metrics-server
accu_metrics_server_version: 2.11.4
accu_metrics_server_namespace: "{{ accu_system_namespace }}"
accu_metrics_server_replicas: 2


# AccuInsight+ Ingress Controller
accu_ingress_controller_enabled: true
accu_ingress_controller_release: accu-ingress
accu_ingress_controller_version: 3.29.0
accu_ingress_controller_namespace: "{{ accu_system_namespace }}"
accu_ingress_controller_replicas: 2
accu_ingress_controller_tlssecret: tls.accuinsight.io
accu_ingress_controller_nodeport_insecure: 30080
accu_ingress_controller_nodeport_secure: 30443
accu_ingress_backend_enabled: true
accu_ingress_backend_replicas: 1


# AccuInsight+ NFS Server
accu_nfs_server_enabled: false
accu_nfs_server_export_path: /nfs
accu_nfs_server_export_opts: "*(rw,sync,no_root_squash,fsid=0,no_subtree_check)"


# AccuInsight+ Rook Ceph
accu_rook_ceph_enabled: true
accu_rook_ceph_release: accu-rook-ceph
accu_rook_ceph_version: 1.5.9
accu_rook_ceph_namespace: rook-ceph
accu_rook_ceph_hostnetwork: false
accu_rook_ceph_node_taint: false
accu_rook_ceph_admin_fqdn: ceph.accuinsight.io
accu_rook_ceph_admin_pass: AccuInsight+k8s
#accu_rook_ceph_node_taint_key: "accuinsight.io/ceph"

accu_rook_ceph_image_version: 15.2.9

accu_rook_ceph_monitor_count: 3 # Must be an odd number (1,3,5,...)

# NOTE: THIS PARAMETERS SHOULD BE CONFIGURED ACCORDING TO CUSTOMER SYSTEM ENVIRONMENT !!!
accu_rook_ceph_storage_devices:

# The following values work only with VMs created by terraform on AWS and 3 Ceph nodes.
  - { host: "{{ groups['accu-ceph'][0] }}", device: nvme1n1, class: hdd }
  - { host: "{{ groups['accu-ceph'][1] }}", device: nvme1n1, class: hdd }
  - { host: "{{ groups['accu-ceph'][2] }}", device: nvme1n1, class: hdd }

# for example
#  - { host: k8s-tanggle-redhat-w01, device: nvme1n1, class: ssd }
#  - { host: k8s-tanggle-redhat-w01, device: nvme2n1, class: hdd }
#  - { host: k8s-tanggle-redhat-w02, device: nvme1n1, class: ssd }
#  - { host: k8s-tanggle-redhat-w02, device: nvme2n1, class: hdd }
#  - { host: k8s-tanggle-redhat-w03, device: nvme1n1, class: ssd }
#  - { host: k8s-tanggle-redhat-w03, device: nvme2n1, class: hdd }

# AccuInsight+ Ceph Block Storage (rbd)
accu_rook_ceph_block_storage_enabled: true
accu_rook_ceph_block_storage_failuredomain: host # host / osd
accu_rook_ceph_block_pool_name: accu-block
accu_rook_ceph_block_pool_type: r # 'e' for Erasure Coding, 'r' for Replication
accu_rook_ceph_block_pool_meta_deviceclass: hdd
accu_rook_ceph_block_pool_data_deviceclass: hdd
accu_rook_ceph_block_pool_replication_size: 3
accu_rook_ceph_block_storage_class_name: accu-ceph-block
accu_rook_ceph_block_storage_class_reclaimpolicy: Retain # Retain / Delete
accu_rook_ceph_block_stroage_class_fstype: ext4

# AccuInsight+ Ceph Filesystem Storage (cephfs)
accu_rook_ceph_filesystem_storage_enabled: true
accu_rook_ceph_filesystem_storage_failuredomain: host # host / osd
accu_rook_ceph_filesystem_pool_name: accu-cephfs
accu_rook_ceph_filesystem_pool_type: r # 'e' for Erasure Coding, 'r' for Replication
accu_rook_ceph_filesystem_pool_meta_deviceclass: hdd
accu_rook_ceph_filesystem_pool_data_deviceclass: hdd
accu_rook_ceph_filesystem_pool_replication_size: 3
accu_rook_ceph_filesystem_storage_class_name: accu-ceph-cephfs
accu_rook_ceph_filesystem_storage_class_reclaimpolicy: Retain # Retain / Delete
accu_rook_ceph_filesystem_mount_on_masters: false

# AccuInsight+ Ceph Object Storage (s3)
accu_rook_ceph_object_storage_enabled: true
accu_rook_ceph_object_storage_failuredomain: host # host / osd
accu_rook_ceph_object_storage_instances: 3
accu_rook_ceph_object_storage_fqdn: s3.accuinsight.io
accu_rook_ceph_object_storage_port: 8080
accu_rook_ceph_object_pool_name: accu-object
accu_rook_ceph_object_pool_type: r # 'e' for Erasure Coding, 'r' for Replication
accu_rook_ceph_object_pool_meta_deviceclass: hdd
accu_rook_ceph_object_pool_data_deviceclass: hdd
accu_rook_ceph_object_pool_replication_size: 3

# AccuInsight+ Ceph NFS Ganesha
accu_rook_ceph_ganesha_enabled: false
accu_rook_ceph_ganesha_failuredomain: host # host / osd
accu_rook_ceph_ganesha_instances: 1
accu_rook_ceph_ganesha_pool_name: accu-ganesha
accu_rook_ceph_ganesha_pool_replication_size: 3
accu_rook_ceph_ganesha_pool_namespace: conf-ganesha
accu_rook_ceph_ganesha_export_path: ganesha


# AccuInsight+ NFS Provisioner
accu_nfs_provisioner_enabled: false
accu_nfs_provisioner_release: accu-nfs-provisioner
accu_nfs_provisioner_version: 4.0.14
accu_nfs_provisioner_namespace: "{{ accu_system_namespace }}"
accu_nfs_provisioner_server: "{{ hostvars[groups['accu-nfs-server'][0]]['private_ip'] }}"
accu_nfs_provisioner_path: /nfs/k8s # /export_path_of_nfs_server/subdir : subdir MUST exist on nfs server !!!
accu_nfs_provisioner_replicas: 2
accu_nfs_provisioner_storageclass_name: accu-nfs
accu_nfs_provisioner_storageclass_reclaimpolicy: Retain # Retain / Delete
accu_nfs_provisioner_mount_on_masters: false


# AccuInsight+ Harbor
accu_harbor_enabled: true
accu_harbor_release: accu-harbor
accu_harbor_version: 1.7.2
accu_harbor_namespace: accu-harbor
accu_harbor_fqdn_core: harbor.accuinsight.io
accu_harbor_fqdn_notary: notary.accuinsight.io
accu_harbor_pass: AccuInsight+k8s
accu_harbor_registry_storage_class: accu-ceph-cephfs
accu_harbor_registry_storage_size: 100Gi
accu_harbor_registry_storage_mode: ReadWriteMany # ReadWriteMany / ReadWriteOnce
accu_harbor_chartmuseum_storage_class: accu-ceph-cephfs
accu_harbor_chartmuseum_storage_size: 1Gi
accu_harbor_chartmuseum_storage_mode: ReadWriteMany # ReadWriteMany / ReadWriteOnce
accu_harbor_jobservice_storage_class: accu-ceph-cephfs
accu_harbor_jobservice_storage_size: 1Gi
accu_harbor_jobservice_storage_mode: ReadWriteMany # ReadWriteMany / ReadWriteOnce
accu_harbor_database_storage_class: accu-ceph-cephfs
accu_harbor_database_storage_size: 10Gi
accu_harbor_database_storage_mode: ReadWriteMany # ReadWriteMany / ReadWriteOnce
accu_harbor_redis_storage_class: accu-ceph-cephfs
accu_harbor_redis_storage_size: 10Gi
accu_harbor_redis_storage_mode: ReadWriteMany # ReadWriteMany / ReadWriteOnce
accu_harbor_trivy_storage_class: accu-ceph-cephfs
accu_harbor_trivy_storage_size: 1Gi
accu_harbor_trivy_storage_mode: ReadWriteNany # ReadWriteMany / ReadWriteOnce


# AccuInsight+ Docker Registry
accu_registry_enabled: true
accu_registry_release: accu-registry
accu_registry_version: 1.9.6
accu_registry_namespace: "{{ accu_system_namespace }}"
accu_registry_replicas: 2
accu_registry_storage_class: accu-ceph-cephfs
accu_registry_storage_mode: ReadWriteMany # ReadWriteMany / ReadWriteOnce
accu_registry_storage_size: 50Gi
accu_registry_fqdn: images.accuinsight.io


# AccuInsight+ Chartmuseum
accu_chartmuseum_enabled: false
accu_chartmuseum_release: accu-chartmuseum
accu_chartmuseum_version: 2.14.2
accu_chartmuseum_namespace: "{{ accu_system_namespace }}"
accu_chartmuseum_replicas: 2
accu_chartmuseum_storage_class: accu-ceph-cephfs
accu_chartmuseum_storage_mode: ReadWriteMany # ReadWriteMany / ReadWriteOnce
accu_chartmuseum_storage_size: 1Gi
accu_chartmuseum_fqdn: charts.accuinsight.io
accu_chartmuseum_name: accuinsight
accu_chartmuseum_user: accuinsight
accu_chartmuseum_pass: AccuInsight+k8s


# AccuInsight+ Prometheus
accu_monitoring_enabled: true
accu_monitoring_release: accu-monitor
accu_monitoring_version: 18.0.1
accu_monitoring_namespace: accu-monitor
accu_monitoring_prometheus_fqdn: pc.accuinsight.io
accu_monitoring_prometheus_retention: 4w
accu_monitoring_prometheus_storage_class: accu-ceph-cephfs
accu_monitoring_prometheus_storage_mode: ReadWriteMany # ReadWriteMany / ReadWriteOnce
accu_monitoring_prometheus_storage_size: 50Gi
accu_monitoring_alertmanager_fqdn: pa.accuinsight.io
accu_monitoring_alertmanager_retention: 120h
accu_monitoring_alertmanager_storage_class: accu-ceph-cephfs
accu_monitoring_alertmanager_storage_mode: ReadWriteMany # ReadWriteMany / ReadWriteOnce
accu_monitoring_alertmanager_storage_size: 50Gi
accu_monitoring_grafana_fqdn: pm.accuinsight.io
accu_monitoring_grafana_pass: AccuInsight+k8s
accu_monitoring_grafana_storage_class: accu-ceph-cephfs
accu_monitoring_grafana_storage_mode: ReadWriteMany # ReadWriteMany / ReadWriteOnce
accu_monitoring_grafana_storage_size: 1Gi

# AccuInsight+ Loki
accu_loki_enabled: true
accu_loki_release: accu-loki
accu_loki_version: 2.5.0
accu_loki_namespace: accu-monitor
accu_loki_storage_class: accu-ceph-cephfs
accu_loki_storage_size: 50Gi
accu_loki_storage_mode: ReadWriteMany # ReadWriteMany / ReadWriteOnce
accu_loki_syslog_job_name: syslog
accu_loki_syslog_label_job: syslog
accu_loki_syslog_label_host: localhost
accu_loki_syslog_label_path: "/var/log/{% if ansible_os_family == 'RedHat' %}messages{% elif ansible_os_family == 'Debian' %}syslog{% endif %}"

# AccuInsight+ GPU Accelerator
accu_accelerator_enabled: false
accu_accelerator_namespace: "{{ accu_system_namespace }}"
accu_accelerator_node_taint: false
#accu_accelerator_node_taint_key: "accuinsight.io/accelerator"
accu_accelerator_nvidia_type: tesla # tesla or gtx
# NOTE: Check proper driver version according to CUDA toolkit to be used.
#       https://www.nvidia.com/Download/index.aspx?lang=en-us
accu_accelerator_driver_version: 450.51.06 # NH & KIS are using 418.197.02.
# If GPU nodes are running on different versions of kernel,
# Check 'uname -r' output of all GPU nodes and list up them as list.
accu_accelerator_kernel_version:
  - "{{ ansible_kernel }}"
  - "3.10.0-1160.42.2.el7.x86_64"
  # for RedHat 7.x family, kernel version must be 3.10.0-1127.el7.x86_64 at least for ceph.
  #- "3.10.0-1127.el7.x86_64"
# NVIDIA K8S Device Plugin Version
# refer to  https://github.com/NVIDIA/k8s-device-plugin/releases
accu_accelerator_device_plugin_version: v0.9.0
# NVIDIA DCGM Exporter Version
# refer to https://github.com/NVIDIA/gpu-monitoring-tools/releases
#          https://hub.docker.com/r/nvidia/dcgm-exporter/tags?page=1&ordering=last_updated
accu_accelerator_device_metric_version: 2.1.4-2.3.1-ubuntu18.04


################################################################################
#                                                                              #
# AccuInsight+ Solution Requirements                                           #
#                                                                              #
################################################################################

# AccuInsight+ MariaDB
accu_mariadb_enabled: true
accu_mariadb_version: 7.10.4
accu_mariadb_release: accu-mariadb
accu_mariadb_namespace: "{{ accu_service_namespace }}"
accu_mariadb_admin_pass: AccuInsight+k8s
accu_mariadb_default_user_name: accuinsight
accu_mariadb_default_user_pass: AccuInsight+k8s
accu_mariadb_default_user_database: accuinsight
accu_mariadb_storage_class: accu-ceph-cephfs
accu_mariadb_storage_size: 50Gi
accu_mariadb_storage_mode: ReadWriteMany
accu_mariadb_slave_enabled: true
accu_mariadb_slave_replicas: 2
accu_mariadb_metrics_enabled: true


# AccuInsight+ Keycloak
accu_keycloak_enabled: true
accu_keycloak_version: 14.0.1
accu_keycloak_release: accu-keycloak
accu_keycloak_namespace: "{{ accu_service_namespace }}"
accu_keycloak_fqdn: idp.accuinsight.io
accu_keycloak_replicas: 2
accu_keycloak_discovery: DNS_PING # DNS_PING or KUBE_PING
accu_keycloak_admin_name: admin
accu_keycloak_admin_pass: AccuInsight+k8s
accu_keycloak_nodeport_insecure: 32080
accu_keycloak_nodeport_secure: 32443
accu_keycloak_db_vendor: mariadb
accu_keycloak_db_addr: "{{ accu_mariadb_release }}.{{ accu_mariadb_namespace }}"
accu_keycloak_db_port: 3306
accu_keycloak_db_name: keycloak
accu_keycloak_db_user: keycloak
accu_keycloak_db_pass: AccuInsight+k8s
accu_keycloak_theme: docker.io/tanggle/keycloak-themes:1.0


