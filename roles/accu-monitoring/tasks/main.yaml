---
# SOURCE: https://github.com/prometheus-community/helm-charts/tree/main/charts/kube-prometheus-stack

- name: AccuInsight+ Monitoring | Add FQDN to /etc/hosts file
  become: yes
  lineinfile:
    dest: /etc/hosts
    insertafter: EOF
    state: present
    line: "{{ accu_load_balancer_addr }} {{ item }}"
  loop:
    - '{{ accu_monitoring_prometheus_fqdn }}'
    - '{{ accu_monitoring_alertmanager_fqdn }}'
    - '{{ accu_monitoring_grafana_fqdn }}'


- name: AccuInsight+ Monitoring | Add Chart Repository 'prometheus-community'
  when:
    - not accu_offline_enabled | bool
    - inventory_hostname in groups['kube-master']
  become: yes
  helm_repository:
    name: prometheus-community
    url: https://prometheus-community.github.io/helm-charts
    state: present
  no_log: true


- name: AccuInsight+ Monitoring | Set chart location
  when:
    - inventory_hostname in groups['kube-master']
  set_fact:
    chartname: >-
      {% if accu_offline_enabled | bool                                                                     %}
      {{ accu_offline_target }}/{{ component }}/charts/kube-prometheus-stack-{{ accu_monitoring_version }}.tgz
      {% else                                                                                               %}
      prometheus-community/kube-prometheus-stack
      {% endif                                                                                              %}
  run_once: yes


- name: AccuInsight+ Monitoring | Deploy {{ accu_monitoring_release }}
  when:
    - inventory_hostname in groups['kube-master']
  become: yes
  helm_cmd:
    name: "{{ chartname }}"
    release: "{{ accu_monitoring_release }}"
    version: "{{ accu_monitoring_version }}"
    namespace: "{{ accu_monitoring_namespace }}"
    state: present
    update_cache: no
    force: yes
    wait: true
    options:
      - '--set fullnameOverride={{ accu_monitoring_release }}'
      - '--set kubeEtcd.service.port=2381'
      - '--set kubeEtcd.service.targetPort=2381'
      - '--set kubeControllerManager.serviceMonitor.https=true'
      - '--set kubeControllerManager.serviceMonitor.insecureSkipVerify=true'
      - '--set kubeControllerManager.service.port=10257'
      - '--set kubeControllerManager.service.targetPort=10257'
      - '--set kubeScheduler.serviceMonitor.https=true'
      - '--set kubeScheduler.serviceMonitor.insecureSkipVerify=true'
      - '--set kubeScheduler.service.port=10259'
      - '--set kubeScheduler.service.targetPort=10259'
      # prometheus
      - '--set prometheus.prometheusSpec.retention={{ accu_monitoring_prometheus_retention }}'
      - '--set prometheus.prometheusSpec.storageSpec.volumeClaimTemplate.spec.storageClassName={{ accu_monitoring_prometheus_storage_class }}'
      - '--set prometheus.prometheusSpec.storageSpec.volumeClaimTemplate.spec.accessModes[0]={{ accu_monitoring_prometheus_storage_mode }}'
      - '--set prometheus.prometheusSpec.storageSpec.volumeClaimTemplate.spec.resources.requests.storage={{ accu_monitoring_prometheus_storage_size }}'
      - '--set prometheus.ingress.enabled=true'
      - '--set prometheus.ingress.hosts[0]={{ accu_monitoring_prometheus_fqdn }}'
      - '--set prometheus.ingress.paths[0]=/'
      - '--set prometheus.ingress.pathType=ImplementationSpecific'
      # alertManagr
      - '--set alertmanager.alertmanagerSpec.retention={{ accu_monitoring_alertmanager_retention }}'
      - '--set alertmanager.alertmanagerSpec.storage.volumeClaimTemplate.spec.storageClassName={{ accu_monitoring_alertmanager_storage_class }}'
      - '--set alertmanager.alertmanagerSpec.storage.volumeClaimTemplate.spec.accessModes[0]={{ accu_monitoring_alertmanager_storage_mode }}'
      - '--set alertmanager.alertmanagerSpec.storage.volumeClaimTemplate.spec.resources.requests.storage={{ accu_monitoring_alertmanager_storage_size }}'
      - '--set alertmanager.ingress.enabled=true'
      - '--set alertmanager.ingress.hosts[0]={{ accu_monitoring_alertmanager_fqdn }}'
      - '--set alertmanager.ingress.paths[0]=/'
      - '--set alertmanager.ingress.pathType=ImplementationSpecific'
      # kube-state-metrics
      - '--set kube-state-metrics.metricLabelsAllowlist[0]=namespaces=[*]'
      - '--set kube-state-metrics.metricLabelsAllowlist[1]=nodes=[*]'
      - '--set kube-state-metrics.metricLabelsAllowlist[2]=services=[*]'
      - '--set kube-state-metrics.metricLabelsAllowlist[3]=pods=[*]'
      # grafana
      - '--set grafana.adminPassword={{ accu_monitoring_grafana_pass }}'
      - '--set grafana.persistence.enabled=true'
      - '--set grafana.persistence.storageClassName={{ accu_monitoring_grafana_storage_class }}'
      - '--set grafana.persistence.accessModes[0]={{ accu_monitoring_grafana_storage_mode }}'
      - '--set grafana.persistence.size={{ accu_monitoring_grafana_storage_size }}'
      - '--set grafana.defaultDashboardsEnabled=true'
      - '--set grafana.initChownData.enabled=false'
      - '--set grafana.ingress.enabled=true'
      - '--set grafana.ingress.hosts[0]={{ accu_monitoring_grafana_fqdn }}'
      - '--set grafana.ingress.path=/'
  run_once: yes


################################################################################
# Create Directory for ServiceMonitor manifests                                #
################################################################################
- name: AccuInsight+ Monitoring | Create manifests directory for {{ component }}
  when:
    - inventory_hostname in groups['kube-master']
  become: yes
  file:
    path: "{{ accu_manifests_location}}/{{ component }}"
    state: directory
    owner: root
    group: root
    mode: '0755'
    recurse: true


################################################################################
# Deploy Prometheus ServiceMonitor for Ceph                        ### BEGIN ###
################################################################################
- name: AccuInsight+ Monitoring | Create manifest for ServiceMonitors (Ceph)
  when:
    - accu_rook_ceph_enabled | bool
    - inventory_hostname in groups['kube-master']
  become: yes
  template:
    src: "{{ item }}.j2"
    dest: "{{ accu_manifests_location}}/{{ component }}/{{ item }}"
    owner: root
    group: root
    mode: '0644'
  loop:
    - 'servicemonitor-rook-ceph-mgr.yaml'
    - 'servicemonitor-rook-ceph-csi.yaml'


- name: AccuInsight+ Monitoring | Apply manifests for ServiceMonitors (Ceph)
  when:
    - accu_rook_ceph_enabled | bool
    - inventory_hostname in groups['kube-master']
  become: yes
  shell: |
      kubectl apply -f {{ accu_manifests_location}}/{{ component }}/{{ item }}
  args:
    executable: /bin/bash
  loop:
    - 'servicemonitor-rook-ceph-mgr.yaml'
    - 'servicemonitor-rook-ceph-csi.yaml'
  run_once: yes
################################################################################
# Deploy Prometheus ServiceMonitor for Ceph                          ### END ###
################################################################################


################################################################################
# Deploy Prometheus ServiceMonitor for MariaDB                     ### BEGIN ###
################################################################################
- name: AccuInsight+ Monitoring | Create manifest for ServiceMonitors (MariaDB)
  when:
    - accu_mariadb_enabled | bool
    - inventory_hostname in groups['kube-master']
  become: yes
  template:
    src: "{{ item }}.j2"
    dest: "{{ accu_manifests_location}}/{{ component }}/{{ item }}"
    owner: root
    group: root
    mode: '0644'
  loop:
    - 'servicemonitor-mariadb.yaml'


- name: AccuInsight+ Monitoring | Apply manifests for ServiceMonitors (MariaDB)
  when:
    - accu_mariadb_enabled | bool
    - inventory_hostname in groups['kube-master']
  become: yes
  shell: |
      kubectl apply -f {{ accu_manifests_location}}/{{ component }}/{{ item }}
  args:
    executable: /bin/bash
  loop:
    - 'servicemonitor-mariadb.yaml'
  run_once: yes
################################################################################
# Deploy Prometheus ServiceMonitor for MariaDB                       ### END ###
################################################################################


################################################################################
# Deploy Prometheus ServiceMonitor for GPU Accelerator             ### BEGIN ###
################################################################################
- name: AccuInsight+ Monitoring | Create manifest for ServiceMonitors (GPU)
  when:
    - accu_accelerator_enabled | bool
    - inventory_hostname in groups['kube-master']
  become: yes
  template:
    src: "{{ item }}.j2"
    dest: "{{ accu_manifests_location}}/{{ component }}/{{ item }}"
    owner: root
    group: root
    mode: '0644'
  loop:
    - 'servicemonitor-nvidia-device-metrics.yaml'


- name: AccuInsight+ Monitoring | Apply manifests for ServiceMonitors (GPU)
  when:
    - accu_accelerator_enabled | bool
    - inventory_hostname in groups['kube-master']
  become: yes
  shell: |
      kubectl apply -f {{ accu_manifests_location}}/{{ component }}/{{ item }}
  args:
    executable: /bin/bash
  loop:
    - 'servicemonitor-nvidia-device-metrics.yaml'
  run_once: yes
################################################################################
# Deploy Prometheus ServiceMonitor for GPU Accelerator               ### END ###
################################################################################


