---
# - { role: accu-common/offline, when: accu_offline_enabled | bool }

#- name: Debug 'structure'
#  debug:
#    msg: "{{ structure }}"
#  run_once: true


- name: AccuInsight+ Offline | Check offline materials
  stat:
    path: "{{ accu_offline_source }}/{{ component }}"
  delegate_to: localhost
  run_once: true
  register: material


- name: AccuInsight+ Offline | Analyze offline materials (types)
  when:
    - material.stat.exists
    - material.stat.isdir
  shell: |
    ls -l {{ accu_offline_source }}/{{ component }} | grep ^d | awk '{ print $NF }'
  args:
    executable: /bin/bash
  delegate_to: localhost
  run_once: true
  register: type


#- name: Debug 'type'
#  debug:
#    msg: "{{ type }}"
#  run_once: true


- name: AccuInsight+ Offline | Analyze offline materials (destinations)
  when:
    - material.stat.exists
    - material.stat.isdir
  shell: |
    ls -l {{ accu_offline_source }}/{{ component }}/{{ item }} | grep ^d | awk '{ print $NF }'
  args:
    executable: /bin/bash
  loop: "{{ type.stdout_lines }}"
  delegate_to: localhost
  run_once: true
  register: dest


#- name: Debug 'dest'
#  debug:
#    msg: "{{ dest }}"
#  run_once: true


- name: AccuInsight+ Offline | Generate offline materials structure
  when:
    - material.stat.exists
    - material.stat.isdir
  set_fact:
    structure: |
      [
      {# Generate materials' structure from dest register #}
      {% set ns = namespace(valid=false)                  %}
      {% for type in dest.results                         %}
      {%   for dest in type.stdout_lines                  %}
      {%     if dest in groups                            %}
      {%       set ns.valid = true                        %}
      {%     endif                                        %}
      {%   endfor                                         %}
      {%   if ns.valid                                    %}
        {
          "type": "{{ type.item }}",
          "dest": [
      {%     for dest in type.stdout_lines                %}
      {%       if dest in groups                          %}
            "{{ dest }}",
      {%       endif                                      %}
      {%     endfor                                       %}
          ]
      {%   endif                                          %}
        },
      {% endfor                                           %}
      ]


- name: AccuInsight+ Offline | Print 'structure'
  debug:
    msg: "{{ structure }}"
  run_once: true


- name: AccuInsight+ Offline | Prepare offline directory
  when:
    - inventory_hostname in groups[item.1]
  become: yes
  file:
    path: "{{ accu_offline_target }}/{{ component }}/{{ item.0.type }}"
    mode: '0755'
    state: directory
    recurse: yes
  loop: "{{ structure | subelements('dest') }}"
  loop_control:
    label: "{{ item.0.type }}, {{ item.1 }}'"


- name: AccuInsight+ Offline | Prepare offline materials ({{ component }})
  when:
    - inventory_hostname in groups[item.1]
  become: yes
  synchronize:
    src: "{{ accu_offline_source }}/{{ component }}/{{ item.0.type }}/{{ item.1 }}/"
    dest: "{{ accu_offline_target }}/{{ component }}/{{ item.0.type }}/"
    checksum: yes
#    delete: yes
  loop: "{{ structure | subelements('dest') }}"
  loop_control:
    label: "{{ item.0.type }}, {{ item.1 }}'"


- name: AccuInsight+ Offline | Preload offline images ({{ component }})
  when:
    - item.0.type == 'images'
    - inventory_hostname in groups[item.1]
  become: yes
  shell: |
    shopt -s nullglob

    for IMAGE in {{ accu_offline_target }}/{{ component }}/{{ item.0.type }}/*.tar.gz
    do

      if [ "{{ kube_cri }}" == "cri-o" ]
      then
          podman load -i ${IMAGE}
      fi 

      if [ "{{ kube_cri }}" == "docker" ]
      then
          docker load -i ${IMAGE}
      fi

      if [ "{{ kube_cri }}" == "containerd" ]
      then
          ctr -n k8s.io image import <(gzip -d -c ${IMAGE})
      fi

    done
  args:
    executable: /bin/bash
  loop: "{{ structure | subelements('dest') }}"
  loop_control:
    label: "{{ item.0.type }}, {{ item.1 }}'"


