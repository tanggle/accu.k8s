---
# SOURCE: https://github.com/kubernetes/ingress-nginx/tree/master/charts/ingress-nginx


# NOTE: Create resource but replace it if already exists.
#      'kubectl create <resource> <name> --dry-run -o yaml | kubectl apply -f -'
- name: AccuInsight+ Ingress Controller | Create Secret from AccuInsight+ Certificate
  when: inventory_hostname in groups['kube-master']
  become: yes
  shell: |
    kubectl create namespace {{ accu_ingress_controller_namespace }} \
            --dry-run -o yaml | kubectl apply -f -

    kubectl create secret tls {{ accu_ingress_controller_tlssecret }} \
            --namespace {{ accu_ingress_controller_namespace }} \
            --key {{ accu_certificates_location }}/server.key \
            --cert {{ accu_certificates_location }}/server.crt \
            --dry-run -o yaml | kubectl apply -f -
  args:
    executable: /bin/bash
  run_once: true


# NOTE: Create resource but replace it if already exists.
#      'kubectl create <resource> <name> --dry-run -o yaml | kubectl apply -f -'
- name: AccuInsight+ Ingress Controller | Create ConfigMap for {{ accu_ingress_controller_release }}
  when: inventory_hostname in groups['kube-master']
  become: yes
  shell: |
    kubectl -n {{ accu_ingress_controller_namespace }} create configmap {{ accu_ingress_controller_release }}-tcp-service \
            --dry-run -o yaml | kubectl apply -f -
    kubectl -n {{ accu_ingress_controller_namespace }} create configmap {{ accu_ingress_controller_release }}-udp-service \
            --dry-run -o yaml | kubectl apply -f -
  args:
    executable: /bin/bash
  run_once: true


- name: AccuInsight+ Ingress Controller | Add Chart Repository 'ingress-nginx'
  when:
    - not accu_offline_enabled | bool
    - inventory_hostname in groups['kube-master']
  become: yes 
  helm_repository:
    name: ingress-nginx
    url: https://kubernetes.github.io/ingress-nginx
    state: present
  no_log: true


- name: AccuInsight+ Ingress Controller | Set chart location
  when:
    - inventory_hostname in groups['kube-master']
  set_fact:
    chartname: >-
      {% if accu_offline_enabled | bool                                                                     %}
      {{ accu_offline_target }}/{{ component }}/charts/ingress-nginx-{{ accu_ingress_controller_version }}.tgz
      {% else                                                                                               %}
      ingress-nginx/ingress-nginx
      {% endif                                                                                              %}
  run_once: yes


# READ: Helm chart configuration
# https://github.com/helm/charts/tree/master/stable/nginx-ingress#configuration
#
# READ: HTTP Strict Transport Security (HSTS)
# https://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security
#
# READ: Nginx ingress configmap
# https://github.com/kubernetes/ingress-nginx/blob/master/docs/user-guide/nginx-configuration/configmap.md
#
# The key and VALUES in a ConfigMap can ONLY BE STRINGS.
# This means that we want a value with boolean values we need to quote the values, like "true" or "false". Same for numbers, like "100".
# Use '--set-string' to set 'controller.config' parameter.
- name: AccuInsight+ Ingress Controller | Deploy {{ accu_ingress_controller_release }}
  when:
    - inventory_hostname in groups['kube-master']
  become: yes
  helm_cmd:
    name: "{{ chartname }}"
    release: "{{ accu_ingress_controller_release }}"
    version: "{{ accu_ingress_controller_version }}"
    namespace: "{{ accu_ingress_controller_namespace }}"
    state: present
    update_cache: no
    force: yes
    wait: true
    options:
      - '--set fullnameOverride={{ accu_ingress_controller_release }}'
      - '--set rbac.create=true'
      - '--set controller.kind=Deployment'
      - '--set controller.metrics.enabled=true'
      - '--set controller.replicaCount={{ accu_ingress_controller_replicas }}'
      - '--set controller.minAvailable=1'
      # NOTE: defatul ingress-nginx deployment pulls images with digest, it doesn't work with preloaded image in offline mode.
      - '--set controller.image.digest=""'
      - '--set defaultBackend.enabled={{ accu_ingress_backend_enabled }}'
      - '--set defaultBackend.name=default-backend'
      - '--set defaultBackend.replicaCount={{ accu_ingress_backend_replicas }}'
      - '--set defaultBackend.minAvailable=1'
      - '--set controller.service.type=NodePort'
      - '--set controller.service.nodePorts.http={{ accu_ingress_controller_nodeport_insecure }}'
      - '--set controller.service.nodePorts.https={{ accu_ingress_controller_nodeport_secure }}'
      - '--set controller.extraArgs.tcp-services-configmap={{ accu_ingress_controller_namespace }}/{{ accu_ingress_controller_release }}-tcp-services'
      - '--set controller.extraArgs.udp-services-configmap={{ accu_ingress_controller_namespace }}/{{ accu_ingress_controller_release }}-udp-services'
      - '--set controller.extraArgs.default-ssl-certificate={{ accu_ingress_controller_namespace }}/{{ accu_ingress_controller_tlssecret }}'
      # Disable HSTS by default
      - '--set-string controller.config.hsts=true'
      # Delete HSTS stored in user's web browser
      - '--set-string controller.config.hsts-max-age=0'
  run_once: yes


