---

- name: AccuInsight+ GPU Accelerator | Upgrade Kernel to the latest version
  become: yes 
  apt:
    name: linux-aws # THIS SHOULD BE CHANGED FOR REAL MACHINE (linux-generic, linux-virtual or linux-aws)
    state: latest
  notify:
    - OS | Reboot


- name: AccuInsight+ GPU Accelerator | Reboot accelerator nodes before installing driver
  meta: flush_handlers


- name: AccuInsight+ GPU Accelerator | Add Package Repository 'NVIDIA'
  when:
    - not accu_offline_enabled | bool
    - not accu_package_repository_enabled | bool
  become: yes 
  shell: |
      # for more details, refer to https://nvidia.github.io/nvidia-docker/
      curl -s -L https://nvidia.github.io/nvidia-docker/gpgkey | apt-key add -
      DIST=$(. /etc/os-release;echo $ID$VERSION_ID)
      curl -s -L https://nvidia.github.io/nvidia-docker/$DIST/nvidia-docker.list | tee /etc/apt/sources.list.d/AccuInsight-NVIDIA.list
      apt update
  args:
    executable: /bin/bash


- name: AccuInsight+ GPU Accelerator | Install NVIDIA driver (Requirements)
  become: yes
  apt:
    name:
      # for Docker
      # Use nvidia-container-runtime instead of nvidia-docker2.
      # nvidia-docker2 makes hard to handle docker daemon.json in ansible level.
      # https://github.com/nvidia/nvidia-container-runtime#installation
      #
      # for CRI-O
      # cri-o uses standard oci hook for device access.
      # use nvidia-container-toolkit instead of nvidia-container-runtime.
      # https://docs.nvidia.com/datacenter/cloud-native/container-toolkit/arch-overview.html
      #
      # 'nvidia_runtime_package' is defined in 'defaults/main.yaml'.
      #
      - '{{ nvidia_runtime_package[kube_cri] }}'
      - 'linux-headers-aws' # THIS SHOULD BE CHANGED FOR REAL MACHINE (linux-headers-generic or linux-headers-virtual)
      - 'build-essential'
    state: present


